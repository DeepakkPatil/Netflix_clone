{"ast":null,"code":"var _jsxFileName = \"F:\\\\netflix-clone\\\\netflixClone\\\\src\\\\components\\\\card\\\\Card.js\",\n  _s = $RefreshSig$();\nimport \"./Card.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  _s();\n  const [video, seVideo] = useState(\"\");\n  const [isHovered, setIsHovered] = useState(false);\n  const youtubeUrl = `https://www.youtube.com/embed/`;\n  const imageUrl = `https://image.tmdb.org/t/p/original/${props.poster}`;\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n  const fetchUrl = async () => {\n    try {\n      const response = await axios.get(`/movie/${props.id}`, {\n        params: {\n          append_to_response: \"videos\"\n        }\n      });\n      if (response.data.videos.results.length > 0) {\n        seVideo(response.data.videos.results[0].key);\n      }\n    } catch (e) {\n      //console.log(e);\n    }\n  };\n  useEffect(() => {\n    fetchUrl();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    children: !isHovered ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"card_poster\",\n      src: imageUrl,\n      alt: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n      className: \"card_poster\",\n      style: {\n        zIndex: '100000'\n      },\n      src: `${youtubeUrl}${video}`,\n      allowFullScreen: true,\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"xtrylBdK1w4Yfw6pIK9ARsJ8pAI=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","props","video","seVideo","isHovered","setIsHovered","youtubeUrl","imageUrl","poster","handleMouseEnter","handleMouseLeave","fetchUrl","response","get","id","params","append_to_response","data","videos","results","length","key","e","title","zIndex"],"sources":["F:/netflix-clone/netflixClone/src/components/card/Card.js"],"sourcesContent":["import \"./Card.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nfunction Card(props) {\r\n  const [video, seVideo] = useState(\"\");\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const youtubeUrl = `https://www.youtube.com/embed/`;\r\n  const imageUrl = `https://image.tmdb.org/t/p/original/${props.poster}`;\r\n  const handleMouseEnter = () => {\r\n    setIsHovered(true);\r\n  };\r\n  const handleMouseLeave = () => {\r\n    setIsHovered(false);\r\n  };\r\n  const fetchUrl = async () => {\r\n    try {\r\n      const response = await axios.get(`/movie/${props.id}`, {\r\n        params: {\r\n          append_to_response: \"videos\",\r\n        },\r\n      });\r\n      if (response.data.videos.results.length > 0) {\r\n        seVideo(response.data.videos.results[0].key);\r\n      }\r\n    } catch (e) {\r\n      //console.log(e);\r\n    }\r\n  };\r\n  useEffect(()=>{fetchUrl();},[])\r\n  \r\n  return (   \r\n    <div onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n      {!isHovered ? (\r\n        <img className=\"card_poster\" src={imageUrl} alt={props.title} />\r\n      ) : (\r\n        <iframe\r\n        className=\"card_poster\"\r\n          style={{zIndex:'100000'}}\r\n          src={`${youtubeUrl}${video}`}\r\n          allowFullScreen\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        ></iframe>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Card;\r\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAC1B,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMQ,UAAU,GAAI,gCAA+B;EACnD,MAAMC,QAAQ,GAAI,uCAAsCN,KAAK,CAACO,MAAO,EAAC;EACtE,MAAMC,gBAAgB,GAAG,MAAM;IAC7BJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EACD,MAAMK,gBAAgB,GAAG,MAAM;IAC7BL,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,MAAMM,QAAQ,GAAG,YAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,UAASZ,KAAK,CAACa,EAAG,EAAC,EAAE;QACrDC,MAAM,EAAE;UACNC,kBAAkB,EAAE;QACtB;MACF,CAAC,CAAC;MACF,IAAIJ,QAAQ,CAACK,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3CjB,OAAO,CAACS,QAAQ,CAACK,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV;IAAA;EAEJ,CAAC;EACDzB,SAAS,CAAC,MAAI;IAACc,QAAQ,EAAE;EAAC,CAAC,EAAC,EAAE,CAAC;EAE/B,oBACE;IAAK,YAAY,EAAEF,gBAAiB;IAAC,YAAY,EAAEC,gBAAiB;IAAA,UACjE,CAACN,SAAS,gBACT;MAAK,SAAS,EAAC,aAAa;MAAC,GAAG,EAAEG,QAAS;MAAC,GAAG,EAAEN,KAAK,CAACsB;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,gBAEhE;MACA,SAAS,EAAC,aAAa;MACrB,KAAK,EAAE;QAACC,MAAM,EAAC;MAAQ,CAAE;MACzB,GAAG,EAAG,GAAElB,UAAW,GAAEJ,KAAM,EAAE;MAC7B,eAAe;MACf,KAAK,EAAC;IAA0F;MAAA;MAAA;MAAA;IAAA;EAEnG;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GA1CQF,IAAI;AAAA,KAAJA,IAAI;AA2Cb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}