{"ast":null,"code":"var _jsxFileName = \"F:\\\\netflix-clone\\\\netflixClone\\\\src\\\\components\\\\row\\\\Row.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport \"./Row.css\";\nimport Card from \"../card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Row(props) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const fetchMovies = async () => {\n    // async is used make await work adn axios gives time promise (it gets data for us)\n    const response = await axios.get(props.url);\n    setMovies(response.data.results);\n    console.log(response.data.results);\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"row_title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_card\",\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          title: movie.title,\n          poster: movie.poster_path,\n          id: movie.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","axios","useState","useEffect","Card","Row","props","movies","setMovies","fetchMovies","response","get","url","data","results","console","log","title","map","movie","poster_path","id"],"sources":["F:/netflix-clone/netflixClone/src/components/row/Row.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./Row.css\";\r\nimport Card from \"../card/Card\";\r\nfunction Row(props) {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const fetchMovies = async () => { // async is used make await work adn axios gives time promise (it gets data for us)\r\n    const response = await axios.get(props.url);\r\n    setMovies(response.data.results);\r\n    console.log(response.data.results);\r\n  };\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, []);\r\n  return (\r\n    <div className=\"row_wrapper\">\r\n      <h3 className=\"row_title\">{props.title}</h3>\r\n      <div className='row_card'>\r\n        {movies.map((movie) => {\r\n           return <Card title={movie.title} poster={movie.poster_path} id={movie.id}/>;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Row;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,cAAc;AAAC;AAChC,SAASC,GAAG,CAACC,KAAK,EAAE;EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMO,WAAW,GAAG,YAAY;IAAE;IAChC,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAACL,KAAK,CAACM,GAAG,CAAC;IAC3CJ,SAAS,CAACE,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IAChCC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;EACpC,CAAC;EACDX,SAAS,CAAC,MAAM;IACdM,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EACN,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MAAI,SAAS,EAAC,WAAW;MAAA,UAAEH,KAAK,CAACW;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAC5C;MAAK,SAAS,EAAC,UAAU;MAAA,UACtBV,MAAM,CAACW,GAAG,CAAEC,KAAK,IAAK;QACpB,oBAAO,QAAC,IAAI;UAAC,KAAK,EAAEA,KAAK,CAACF,KAAM;UAAC,MAAM,EAAEE,KAAK,CAACC,WAAY;UAAC,EAAE,EAAED,KAAK,CAACE;QAAG;UAAA;UAAA;UAAA;QAAA,QAAE;MAC9E,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GArBQhB,GAAG;AAAA,KAAHA,GAAG;AAsBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}